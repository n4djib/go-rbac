
- TODO try to use RunRule (check rule) from the engine 
	to allow the user to test if the engine can evaluate the rule
- TODO need to improve error handling
- TODO you can add error state in struct
- TODO make a library
- TODO what if we change the data into graph at init
    would that be faster?
- TODO set the data as maps not slices
    would that be faster?
    the slice length is short
- TODO embed (promot method by composition) engin in rbac
    do it if it makes the API is easier
- TODO add RULE to roles
- TODO how to define engine from outside package rbac
- TODO add testing
- TODO change the JS version liek you did with the GO version
	changed how it checks the setting of Roles and Permissions and RolePermissions
- TODO isAllowed result should return a message indicating the reason for unauthorized
- TODO are the rules able to run in both GO and JS
- TODO how to test in both languages at the same time
	maybe integration test where the JS tries the GO backend



== GO-RBAC
rules for Roles
role: manager
	but the rule says manager of
	maybe you are a manager if a condition applies
		like if your manager is absent

= GO-RBAC Optimization

traverse the tree as if the rules are all true without ruunning them
and check if the user has the required role
if he has the reqiored role
we traverse the tree

= a better optimization
we don't evaluate the rule unless
the rule leads to the role




== Testing ==
> go test ./rbac
> go test ./rbac -coverprofile=c.out
> go tool cover -html=c.out


